!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
apply	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.apply = function (fn) {$/;"	m	language:JavaScript	class:YAFF
cb	/home/daniil/projects/my/yaff/main.js	/^  var cb = function (e) {$/;"	f	language:JavaScript	function:executor
conveyor	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.conveyor = function () {$/;"	m	language:JavaScript	class:YAFF
debug	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.debug = function (fn) {$/;"	m	language:JavaScript	class:YAFF
defaultDebug	/home/daniil/projects/my/yaff/main.js	/^  var defaultDebug = function () {$/;"	c	language:JavaScript	class:YAFF.var
dummy	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.dummy = function () {$/;"	m	language:JavaScript	class:YAFF
empty	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.empty = function () {$/;"	m	language:JavaScript	class:YAFF
err	/home/daniil/projects/my/yaff/testsuite.js	/^var err  = console.error;$/;"	v	language:JavaScript
errHandler	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.errHandler = function (e) {$/;"	m	language:JavaScript	class:YAFF
executor	/home/daniil/projects/my/yaff/main.js	/^var executor = function (currItem, self, merge) {$/;"	f	language:JavaScript
extend	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.extend = function (arr) {$/;"	m	language:JavaScript	class:YAFF
filter	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.filter = function (fn, thisArg) {$/;"	m	language:JavaScript	class:YAFF
finHandler	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.finHandler = function (e) {$/;"	m	language:JavaScript	class:YAFF
flatten	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.flatten = function (fully) {$/;"	m	language:JavaScript	class:YAFF
forEach	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.forEach = function (fn, limit) {$/;"	m	language:JavaScript	class:YAFF
fs	/home/daniil/projects/my/yaff/testsuite.js	/^var fs   = require('fs');$/;"	v	language:JavaScript
handlersMap	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.handlersMap = {};$/;"	m	language:JavaScript	class:YAFF
handlersMap	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.handlersMap[FIN] = function (self) {$/;"	m	language:JavaScript	class:YAFF
handlersMap	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.handlersMap[PAR] = function (self, currItem) {$/;"	m	language:JavaScript	class:YAFF
handlersMap	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.handlersMap[SEQ] = function (self, currItem) {$/;"	m	language:JavaScript	class:YAFF
ins	/home/daniil/projects/my/yaff/main.js	/^var ins   = require('util').inspect;$/;"	v	language:JavaScript
ins	/home/daniil/projects/my/yaff/testsuite.js	/^var ins  = require('util').inspect;$/;"	v	language:JavaScript
iterate	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.iterate = function (method, fn, limit) {$/;"	m	language:JavaScript	class:YAFF
JSDOX	/home/daniil/projects/my/yaff/Makefile	/^JSDOX = $(MODULES)jsdox\/bin\/jsdox$/;"	m	language:Make
limit	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.limit = function (limit) {$/;"	m	language:JavaScript	class:YAFF
load	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.load = function (name) {$/;"	m	language:JavaScript	class:YAFF
log	/home/daniil/projects/my/yaff/main.js	/^var log   = console.log;$/;"	v	language:JavaScript
log	/home/daniil/projects/my/yaff/testsuite.js	/^var log  = console.log;$/;"	v	language:JavaScript
map	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.map = function (fn, thisArg) {$/;"	m	language:JavaScript	class:YAFF
MODULES	/home/daniil/projects/my/yaff/Makefile	/^MODULES = .\/node_modules\/$/;"	m	language:Make
mpar	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.mpar = function (arr) {$/;"	m	language:JavaScript	class:YAFF
mseq	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.mseq = function (arr) {$/;"	m	language:JavaScript	class:YAFF
NODE	/home/daniil/projects/my/yaff/Makefile	/^NODE = \/usr\/bin\/env node$/;"	m	language:Make
NPM	/home/daniil/projects/my/yaff/Makefile	/^NPM = \/usr\/bin\/env npm$/;"	m	language:Make
par	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.par = function (fn) {$/;"	m	language:JavaScript	class:YAFF
parEach	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.parEach = function (fn, limit) {$/;"	m	language:JavaScript	class:YAFF
parFilter	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.parFilter = function (fn, limit) {$/;"	m	language:JavaScript	class:YAFF
parMap	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.parMap = function (fn, limit) {$/;"	m	language:JavaScript	class:YAFF
par_	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.par_ = function (fn) {$/;"	m	language:JavaScript	class:YAFF
path	/home/daniil/projects/my/yaff/testsuite.js	/^var path = require('path');$/;"	v	language:JavaScript
pop	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.pop = function () {$/;"	m	language:JavaScript	class:YAFF
push	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.push = function (\/*args*\/) {$/;"	m	language:JavaScript	class:YAFF
reduce	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.reduce = function (fn, initialValue) {$/;"	m	language:JavaScript	class:YAFF
reverse	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.reverse = function () {$/;"	m	language:JavaScript	class:YAFF
save	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.save = function (name) {$/;"	m	language:JavaScript	class:YAFF
seq	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.seq = function (fn) {$/;"	m	language:JavaScript	class:YAFF
Seq	/home/daniil/projects/my/yaff/test.js	/^var Seq = require('.\/main');$/;"	v	language:JavaScript
seqEach	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.seqEach = function (fn) {$/;"	m	language:JavaScript	class:YAFF
seqFilter	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.seqFilter = function (fn) {$/;"	m	language:JavaScript	class:YAFF
seqMap	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.seqMap = function (fn) {$/;"	m	language:JavaScript	class:YAFF
seq_	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.seq_ = function (fn) {$/;"	m	language:JavaScript	class:YAFF
set	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.set = function (arr) {$/;"	m	language:JavaScript	class:YAFF
shift	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.shift = function () {$/;"	m	language:JavaScript	class:YAFF
slice	/home/daniil/projects/my/yaff/main.js	/^var slice = Array.prototype.slice.call.bind(Array.prototype.slice);$/;"	v	language:JavaScript
splice	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.splice = function (index, howMany, toAppend) {$/;"	m	language:JavaScript	class:YAFF
test	/home/daniil/projects/my/yaff/test.js	/^var test = require('.\/testsuite');$/;"	v	language:JavaScript
unflatten	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.unflatten = function () {$/;"	m	language:JavaScript	class:YAFF
unshift	/home/daniil/projects/my/yaff/main.js	/^YAFF.prototype.unshift = function (\/*args*\/) {$/;"	m	language:JavaScript	class:YAFF
YAFF	/home/daniil/projects/my/yaff/main.js	/^};$/;"	c	language:JavaScript
